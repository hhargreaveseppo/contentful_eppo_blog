"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpRequestError = void 0;
class HttpRequestError extends Error {
    constructor(message, status) {
        super(message);
        this.message = message;
        this.status = status;
    }
}
exports.HttpRequestError = HttpRequestError;
class HttpClient {
    constructor(axiosInstance, sdkParams) {
        this.axiosInstance = axiosInstance;
        this.sdkParams = sdkParams;
    }
    async get(resource) {
        try {
            const response = await this.axiosInstance.get(resource, {
                params: this.sdkParams,
            });
            return response.data;
        }
        catch (error) {
            this.handleHttpError(error);
        }
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    handleHttpError(error) {
        var _a;
        const status = (_a = error === null || error === void 0 ? void 0 : error.response) === null || _a === void 0 ? void 0 : _a.status;
        throw new HttpRequestError(error.message, status);
    }
}
exports.default = HttpClient;
//# sourceMappingURL=http-client.js.map