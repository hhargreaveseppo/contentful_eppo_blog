import { IAssignmentLogger, IEppoClient, EppoClient, IAssignmentHooks } from '@eppo/js-client-sdk-common';
/**
 * Configuration used for initializing the Eppo client
 * @public
 */
export interface IClientConfig {
    /**
     * Eppo API key
     */
    apiKey: string;
    /**
     * Base URL of the Eppo API.
     * Clients should use the default setting in most cases.
     */
    baseUrl?: string;
    /**
     * Pass a logging implementation to send variation assignments to your data warehouse.
     */
    assignmentLogger: IAssignmentLogger;
}
export { IAssignmentLogger, IAssignmentEvent, IEppoClient } from '@eppo/js-client-sdk-common';
/**
 * Client for assigning experiment variations.
 * @public
 */
export declare class EppoJSClient extends EppoClient {
    static instance: EppoJSClient;
    getAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): string | null;
    getStringAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): string | null;
    getBoolAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): boolean | null;
    getNumericAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): number | null;
    getJSONStringAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): string | null;
    getParsedJSONAssignment(subjectKey: string, flagKey: string, subjectAttributes?: Record<string, any>, assignmentHooks?: IAssignmentHooks): object | null;
}
/**
 * Initializes the Eppo client with configuration parameters.
 * This method should be called once on application startup.
 * @param config - client configuration
 * @public
 */
export declare function init(config: IClientConfig): Promise<IEppoClient>;
/**
 * Used to access a singleton SDK client instance.
 * Use the method after calling init() to initialize the client.
 * @returns a singleton client instance
 * @public
 */
export declare function getInstance(): IEppoClient;
//# sourceMappingURL=index.d.ts.map