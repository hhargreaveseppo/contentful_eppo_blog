"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EppoLocalStorage = void 0;
class EppoLocalStorage {
    get(key) {
        if (this.hasWindowLocalStorage()) {
            const serializedEntry = window.localStorage.getItem(key);
            if (serializedEntry) {
                return JSON.parse(serializedEntry);
            }
        }
        return null;
    }
    // Checks whether local storage is enabled in the browser (the user might have disabled it).
    hasWindowLocalStorage() {
        try {
            return typeof window !== 'undefined' && !!window.localStorage;
        }
        catch (_a) {
            // Chrome throws an error if local storage is disabled and you try to access it
            return false;
        }
    }
    setEntries(entries) {
        if (this.hasWindowLocalStorage()) {
            Object.entries(entries).forEach(([key, val]) => {
                window.localStorage.setItem(key, JSON.stringify(val));
            });
        }
    }
}
exports.EppoLocalStorage = EppoLocalStorage;
//# sourceMappingURL=local-storage.js.map